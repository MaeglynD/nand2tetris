@256
		D=A
		@SP
		M=D
		@Sys.init$return.0
		D=A
		@SP
		M=M+1
		A=M-1
		M=D
		@LCL
		D=M
		@SP
		M=M+1
		A=M-1
		M=D
		@ARG
		D=M
		@SP
		M=M+1
		A=M-1
		M=D
		@THIS
		D=M
		@SP
		M=M+1
		A=M-1
		M=D
		@THAT
		D=M
		@SP
		M=M+1
		A=M-1
		M=D
		@SP
		D=M
		@5
		D=D-A
		@ARG
		M=D
		@SP
		D=M
		@LCL
		M=D
		@Sys.init
		0;JMP
		(Sys.init$return.0)
		//
(Main.fibonacci)
//
 // argument0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//
 // constant2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//
 // lt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@LT_TRUE_13
D;JLT
@SP
A=M-1
M=0
@LT_END_13
0;JMP
(LT_TRUE_13)
@SP
A=M-1
M=-1
(LT_END_13)
//
@SP
M=M-1
A=M
D=M
@Main.fibonacci$IF_TRUE
D;JNE
//
@Main.fibonacci$IF_FALSE
0;JMP

//
(Main.fibonacci$IF_TRUE)
//
 // argument0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//
@LCL
D=M
@FRAME
M=D
@5
A=D-A
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//
(Main.fibonacci$IF_FALSE)
//
 // argument0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//
 // constant2
@2
D=A
@SP
M=M+1
A=M-1
M=D
//
 // sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//
@Main.fibonacci$return.23
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$return.23)
//
 // argument0
@ARG
D=M
@0
A=D+A
D=M
@SP
M=M+1
A=M-1
M=D
//
 // constant1
@1
D=A
@SP
M=M+1
A=M-1
M=D
//
 // sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//
@Main.fibonacci$return.27
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$return.27)
//
 // add
@SP
M=M-1
A=M
D=M
A=A-1
M=D+M
//
@LCL
D=M
@FRAME
M=D
@5
A=D-A
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
A=M-1
D=M
@THAT
M=D
@2
D=A
@FRAME
A=M-D
D=M
@THIS
M=D
@3
D=A
@FRAME
A=M-D
D=M
@ARG
M=D
@4
D=A
@FRAME
A=M-D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//
(Sys.init)
//
 // constant4
@4
D=A
@SP
M=M+1
A=M-1
M=D
//
@Main.fibonacci$return.42
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$return.42)
//
(Sys.init$WHILE)
//
@Sys.init$WHILE
0;JMP

